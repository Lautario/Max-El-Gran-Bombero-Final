<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enef</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables enemigo 

dir = -1;
movespeed = 6;
grav = 0.4 ;
hsp = 0;
vsp = 0;
qnsc = 1;
shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>68</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>//Fire
pFX_PS_Fire = part_system_create();
pFX_PT_Fire = part_type_create();
pFX_Emitter_Fire = part_emitter_create(pFX_PS_Fire);

//Smoke
pFX_PS_Smoke = part_system_create();
pFX_PT_Smoke = part_type_create();
pFX_Emitter_Smoke = part_emitter_create(pFX_PS_Smoke);

//Dark Smoke
pFX_PS_Smoke_Dark = part_system_create();
pFX_PT_Smoke_Dark = part_type_create();
pFX_Emitter_Smoke_Dark = part_emitter_create(pFX_PS_Smoke_Dark);

//Explosion
pFX_PS_explosion = part_system_create();
pFX_PT_explosion_smoke = part_type_create();
pFX_PT_explosion_fires = part_type_create();
pFX_PT_explosion_center = part_type_create();

//Blood
pFX_PS_Blood = part_system_create();
pFX_PT_Blood = part_type_create();
pFX_Emitter_Blood = part_emitter_create(pFX_PS_Blood);

//Magical Hit
pFX_PS_Magical01 = part_system_create();
pFX_PT1_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT2_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);

pFX_PT3_Magical01 = part_type_create();
pFX_Emitter_Magical01 = part_emitter_create(pFX_PS_Magical01);


//Bubble
pFX_PS_Bubble = part_system_create();
pFX_PT_Bubble = part_type_create();
pFX_Emitter_Bubble = part_emitter_create(pFX_PS_Bubble);

//Personal
pFX_PS_SpriteReflection = part_system_create();
pFX_PT_SpriteReflection = part_type_create();
pFX_Emitter_SpriteReflection = part_emitter_create(pFX_PS_SpriteReflection);</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimiento del fueguito

hsp = dir * movespeed;
vsp += grav;


//hsp = dir * movespeed;
//vsp += grav;




if (dir == -1) {
      image_xscale = -1;

}

if (dir == 1)  {
      image_xscale = 1; 
}

// colision horizontal
if (place_meeting(x+hsp, y, objmuro)){
    while(!place_meeting(x+sign(hsp), y, objmuro)){
    x += sign (hsp);  
    }
    hsp = 0;
    
    dir *= -1;
   
}
//x += hsp;

/*
if (place_meeting(x+hsp, y, obj_muro4)){
    while(!place_meeting(x+sign(hsp), y, obj_muro4)){
    x += sign (hsp);  
    }
    hsp = 0;
    
    dir *= -1;
}*/

x += hsp;



// colision vertical
if (place_meeting(x, y+vsp, objmuro)){
    while(!place_meeting(x, y+sign(vsp), objmuro)){
        y += sign (vsp);  
    }

    vsp = 0;
    
    var sprWidth = 0*((sprite_get_width(sprite_index))/2)*dir;
    var sprHeight = (sprite_get_height(sprite_index))/2 + 1;
    
    if(qnsc &amp;&amp;(!position_meeting(x+sprWidth,y+sprHeight,objmuro)))
    {dir*= -1;}
}
y += vsp;


var sprWidth = 0*(sprite_get_width(sprite_index))/2;
var sprHeight = (sprite_get_height(sprite_index))/2 + 1;
draw_line(x,y,x+sprWidth*dir,y+sprHeight)



// Se choca con max 
/*
if(place_meeting(x,y,obj_Max))
{
    if (obj_Max.y &lt; y-16)
    {
        with(obj_Max) vsp = -jumpspeed;
        
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>777060</libid>
        <id>2</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>// KEY: Dir = angle direction
{
globalvar pFX_Dir_Fire, pFX_XXp_Fire, pFX_YYp_Fire, pFX_Width_Fire, pFX_High_Fire, pFX_PD_Fire;
pFX_Dir_Fire = argument0;
pFX_XXp_Fire = argument1;
pFX_YYp_Fire = argument2;
pFX_Width_Fire = argument3;
pFX_High_Fire = argument4;
pFX_PD_Fire = argument5;

if (pFX_High_Fire &lt;= 8) {pFX_High_Fire = 8;}
if (pFX_Width_Fire &lt;= 8) {pFX_Width_Fire = 8;}

//pFX_PS_Fire = part_system_create();
part_system_depth(pFX_PS_Fire, pFX_PD_Fire);

//pFX_PT_Fire = part_type_create();
part_type_shape(pFX_PT_Fire,pt_shape_line);
part_type_size(pFX_PT_Fire,0.20,0.60,0,0);
part_type_scale(pFX_PT_Fire,0.65,2.50);
part_type_color3(pFX_PT_Fire,152829,33023,255);
part_type_alpha3(pFX_PT_Fire,0.04,0.06,0.07);
part_type_speed(pFX_PT_Fire,0.10,3,-0.02,0);
part_type_direction(pFX_PT_Fire,pFX_Dir_Fire-5,pFX_Dir_Fire+5,0,9);
part_type_gravity(pFX_PT_Fire,0,270);
part_type_orientation(pFX_PT_Fire,0,0,8,20,1);
part_type_blend(pFX_PT_Fire,1);
part_type_life(pFX_PT_Fire,pFX_High_Fire/2,pFX_High_Fire);

//pFX_Emitter_Fire = part_emitter_create(pFX_PS_Fire);
part_emitter_region(pFX_PS_Fire,pFX_Emitter_Fire,pFX_XXp_Fire+pFX_Width_Fire,pFX_XXp_Fire-pFX_Width_Fire,pFX_YYp_Fire+8,pFX_YYp_Fire-8,ps_shape_ellipse,1);
part_emitter_burst(pFX_PS_Fire, pFX_Emitter_Fire, pFX_PT_Fire, pFX_Width_Fire/4 + irandom(pFX_Width_Fire/2));
}</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>90</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x+16</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y+16</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-100000</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
